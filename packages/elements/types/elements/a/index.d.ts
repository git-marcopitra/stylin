import { CreateStylinArguments } from '@stylin.js/react';
import { RefAttributes } from 'react';
import { AElementProps } from './a.types';
export declare const stylinA: <T extends Record<string, unknown>>(...styles: CreateStylinArguments) => import("@stylin.js/react").StylinComponent<T & AElementProps & RefAttributes<AElementProps>>;
export declare const A: import("react").ForwardRefExoticComponent<Partial<import("@stylin.js/react").StylinProperties & Record<"nCue" | "nCueRegion" | "nKhtmlAnyLink" | "nMozAnyLink" | "nMozFocusring" | "nMozFullScreen" | "nMozReadOnly" | "nMozReadWrite" | "nMozUiInvalid" | "nMozUiValid" | "nMsFullscreen" | "nWebkitAnyLink" | "nWebkitFullScreen" | "nMozPlaceholder" | "nMozProgressBar" | "nMozRangeProgress" | "nMozRangeThumb" | "nMozRangeTrack" | "nMozSelection" | "nMsBackdrop" | "nMsBrowse" | "nMsCheck" | "nMsClear" | "nMsFill" | "nMsFillLower" | "nMsFillUpper" | "nMsInputPlaceholder" | "nMsReveal" | "nMsThumb" | "nMsTicksAfter" | "nMsTicksBefore" | "nMsTooltip" | "nMsTrack" | "nMsValue" | "nWebkitBackdrop" | "nWebkitInputPlaceholder" | "nWebkitProgressBar" | "nWebkitProgressInnerValue" | "nWebkitProgressValue" | "nWebkitSliderRunnableTrack" | "nWebkitSliderThumb" | "nAfter" | "nBackdrop" | "nBefore" | "nFirstLetter" | "nFirstLine" | "nGrammarError" | "nMarker" | "nPlaceholder" | "nSelection" | "nSpellingError" | "nTargetText" | "nActive" | "nAnyLink" | "nBlank" | "nChecked" | "nCurrent" | "nDefault" | "nDefined" | "nDisabled" | "nEmpty" | "nEnabled" | "nFirst" | "nFirstChild" | "nFirstOfType" | "nFocus" | "nFocusVisible" | "nFocusWithin" | "nFullscreen" | "nFuture" | "nHover" | "nInRange" | "nIndeterminate" | "nInvalid" | "nLastChild" | "nLastOfType" | "nLeft" | "nLink" | "nLocalLink" | "nNthCol" | "nNthLastCol" | "nOnlyChild" | "nOnlyOfType" | "nOptional" | "nOutOfRange" | "nPast" | "nPaused" | "nPictureInPicture" | "nPlaceholderShown" | "nReadOnly" | "nReadWrite" | "nRequired" | "nRight" | "nRoot" | "nScope" | "nTarget" | "nTargetWithin" | "nUserInvalid" | "nUserValid" | "nValid" | "nVisited", import("@emotion/styled").Interpolation<import("@stylin.js/core").CSSProperties & Partial<Record<import("@stylin.js/core").StylinCustomPropertiesType, string>>>>> & AElementProps & {
    children?: import("react").ReactNode;
} & RefAttributes<AElementProps>>;
export * from './a.types';
